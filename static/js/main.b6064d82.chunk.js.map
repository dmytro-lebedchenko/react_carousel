{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","buttonHandler","type","props","images","step","infinite","setState","length","this","frameSize","itemWidth","animationDuration","className","style","maxWidth","overflow","transform","transition","map","image","index","minWidth","minHeight","src","alt","onClick","disabled","React","Component","App","min","defaultValue","onChange","e","target","value","max","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6064d82.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  position: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  buttonHandler = (type: string) => {\n    const {\n      images,\n      step,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n\n    if (type === 'previous') {\n      if (position - step >= 0) {\n        this.setState({ position: position - step });\n      } else if (infinite) {\n        this.setState({\n          position: (images.length - step),\n        });\n      }\n    }\n\n    if (type === 'next') {\n      if ((position + step) < images.length) {\n        this.setState({ position: position + step });\n      } else if (infinite) {\n        this.setState({ position: 0 });\n      }\n    }\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          maxWidth: `${frameSize * itemWidth}px`,\n          overflow: 'hidden',\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${-position * itemWidth}px)`,\n            transition: `${animationDuration}ms`,\n          }}\n        >\n          {\n            images.map((image, index) => (\n              <li\n                className=\"Carousel__item\"\n                style={{\n                  minWidth: `${itemWidth}px`,\n                  minHeight: `${itemWidth}px`,\n                }}\n                key={image}\n              >\n                <img\n                  src={image}\n                  alt={`pic-${index}`}\n                  className=\"Carousel__img\"\n                />\n              </li>\n            ))\n          }\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"Carousel__buttons--prev button is-warning is-medium\"\n            type=\"button\"\n            onClick={() => this.buttonHandler('previous')}\n            disabled={(position <= 0) && !infinite}\n            aria-label=\"PREV\"\n          />\n\n          <button\n            className=\"Carousel__buttons--next button is-warning is-medium\"\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={() => this.buttonHandler('next')}\n            disabled={(position >= images.length - 1) && !infinite}\n            aria-label=\"NEXT\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Carousel } from './components/Carousel';\nimport 'bulma/css/bulma.min.css';\nimport './App.scss';\n\ninterface State {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\" className=\"App__title title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n        <form className=\"App__options\">\n          <label className=\"App__input App__input--item-width\">\n            Item width:\n            <input\n              type=\"number\"\n              min=\"0\"\n              defaultValue={itemWidth}\n              onChange={(e) => {\n                this.setState({ itemWidth: +e.target.value });\n              }}\n            />\n          </label>\n\n          <label className=\"App__input\">\n            Frame size:\n            <input\n              type=\"number\"\n              min=\"2\"\n              max={images.length}\n              defaultValue={frameSize}\n              onChange={(e) => {\n                this.setState({ frameSize: +e.target.value });\n              }}\n            />\n          </label>\n\n          <label className=\"App__input App__input--step\">\n            Step:\n            <input\n              type=\"number\"\n              min=\"0\"\n              max={images.length}\n              defaultValue={step}\n              onChange={(e) => {\n                this.setState({ step: +e.target.value });\n              }}\n            />\n          </label>\n\n          <label\n            className=\"\n              App__input\n              App__input--animation-duration\"\n          >\n            Animation duration:\n            <input\n              type=\"number\"\n              min=\"0\"\n              defaultValue={animationDuration}\n              onChange={(e) => {\n                this.setState({ animationDuration: +e.target.value });\n              }}\n            />\n          </label>\n\n          <label className=\"App__input\">\n            Infinite:\n            <input\n              type=\"checkbox\"\n              checked={infinite}\n              className=\"App__input--checkbox\"\n              onChange={() => {\n                this.setState({ infinite: !infinite });\n              }}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}